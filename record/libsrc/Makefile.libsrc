include ../../config/Makefile.config

###############################################
## Options
###############################################

# Send/Recv tags
RETAIN_TAGS=n

# Record SRC/DEST/COUNT parameters with histogram when compression fails
PARAM_HISTO=n

# Stack signature difference, this is the maximum number of different 
# frames allowed in two signatures
SIG_DIFF=0

# Compress loop iterations using LCS analysis
LOOP_LCS=n

# Use time-independent tracing 
TIME_INDEPENDENT=y

# Use calibration feature (to log both timed and time independent computation stats)
# Should be set to y only if TIME_INDEPENDENT is set to y
CALIBRATION=n

ifeq ($(RETAIN_TAGS),y)
MPIFLAGS += -DFEATURE_RETAIN_TAGS
endif
ifeq ($(PARAM_HISTO),y)
MPIFLAGS += -DFEATURE_PARAM_HISTO
endif
MPIFLAGS += -DFEATURE_SIG_DIFF=$(SIG_DIFF)
ifeq ($(LOOP_LCS),y)
MPIFLAGS += -DFEATURE_LOOP_LCS
endif
ifeq ($(TIME_INDEPENDENT),y)
MPIFLAGS += -DFEATURE_TIME_INDEPENDENT
  ifeq ($(CALIBRATION), y)
    MPIFLAGS += -DFEATURE_CALIBRATION
  endif
else
  ifeq ($(CALIBRATION), y)
    CALIBRATION=n
  endif
endif


MPIFLAGS+=$(COMPRESS_FLAGS)

# this fixes some warnings, but it's only needed when using mpich
CPPFLAGS+=-DMPICH_IGNORE_CXX_SEEK


SW_HOME=${top_srcdir}/../stackwalk/ver0
SW_LIBS = -L$(SW_HOME) -lstackwalk -L$(papilibdir) -lpapi
SW_INCLUDE = -I$(SW_HOME) 



#### #### #### #### #### Include Dir #### #### #### #### ####
# compilation is done from the 'DIR' folder
# CPPFLAGS is used to generated dependencies
CPPFLAGS+=-I${top_srcdir}/libsrc  \
          -I${top_srcdir}/common/inc \
          -I${top_srcdir}/libsrc/${DIR} \
           $(SW_INCLUDE) \
           -I$(papiincludedir)


#### #### #### #### #### source dirs  #### #### #### #### ####
VPATH=${top_srcdir}/common/src:${top_srcdir}/libsrc

#### #### #### #### #### Object files #### #### #### #### ####
C_SRCS = \
	umpi_mpi.c \
	umpi_mpi_print_ops.c \
	umpi_mpi_lookup.c \
	umpi_mpi_replay_ops.c \
	umpi_mpi_pack_ops.c \
	umpi_mpi_unpack_ops.c \
	umpi_mpi_free_ops.c \
	umpi_mpi_copy_ops.c \
	umpi_internal.c \
	queue.c \
	mpi_util.c \
	util.c \
	radix_tree.c \

SCALATRACE_C_SRCS = 

C_SRCS+=$(SCALATRACE_C_SRCS)


CXX_SRCS:= \
	Event.C \
	Ranklist.C \
	Param.C \
	ParamValue.C \
	Trace.C \
	StackSig.C \
	Loop.C \
	PtrHandler.C \
	ReqHandler.C \
	HistoBin.C \
	Histogram.C \
	ValueSet.C \
	Stat.C \
	StatTime.C \
	StatInst.C \
	RandMnger.C \


OTHER_SRCS:=

#C_SRCS+=$(OTHER_SRCS)
C_SRCS+=$(STACK_SIG_SRC)

OBJS=$(C_SRCS:.c=.o) $(CXX_SRCS:.C=.o) 

#### #### #### #### #### Wrapper generated files #### #### #### #### ####
WRAPPER_GENERATED = \
	umpi_mpi.c \
	umpi_mpi.h \
	umpi_mpi_ops.h \
	umpi_mpi_lookup.c \
	umpi_mpi_mgr_verify.c \
	umpi_mpi_mgr_verify.h \
	umpi_mpi_outfielder_verify.c \
	umpi_mpi_outfielder_verify.h \
	umpi_mpi_print_ops.c \
	umpi_mpi_print_ops.h \
	umpi_mpi_replay_ops.c \
    umpi_mpi_replay_ops.h \
	umpi_mpi_pack_ops.c \
	umpi_mpi_pack_ops.h \
	umpi_mpi_unpack_ops.c \
	umpi_mpi_unpack_ops.h \
	umpi_mpi_free_ops.c \
	umpi_mpi_free_ops.h \
	umpi_mpi_copy_ops.c \
	umpi_mpi_copy_ops.h \
	umpi_mpi_params.h


MPICFLAGS+=$(MPIFLAGS)
MPICXXFLAGS+=-DMPICH_IGNORE_CXX_SEEK $(MPIFLAGS)

include ../../config/Makefile.rules
libdump libnode libglob: $(OBJS)
	mkdir -p ${top_srcdir}/lib/;
	$(AR) -rv ${top_srcdir}/lib/$@.a $(OBJS)
	mkdir -p ${top_srcdir}/inc/;
	cp ${top_srcdir}/libsrc/${DIR}/umpi_mpi_ops.h ${top_srcdir}/inc/;

libnode-r: $(OBJS)
	$(AR) -rv ${top_srcdir}/lib/$@.a $(OBJS:$(STACK_SIG_SRC:c=o)=)

libglob-r: $(OBJS)
	$(AR) -rv ${top_srcdir}/lib/$@.a $(OBJS:$(STACK_SIG_SRC:c=o)=)

$(WRAPPER_GENERATED): ${top_srcdir}/libsrc/mpi-spec.umpi.extract ${top_srcdir}/wrapper-engine/wrapper-engine.exe
	${top_srcdir}/wrapper-engine/wrapper-engine.exe mpi 1000 < ${top_srcdir}/libsrc/mpi-spec.umpi.extract
	@if [ "$(CONFIG_HAVE_INDENT)" = "y" ]; then \
		indent -gnu $(WRAPPER_GENERATED); \
	fi

clean:
	$(RM) $(WRAPPER_GENERATED) *.o *~ *.[dD] ${top_srcdir}/lib/*.a ${top_srcdir}/inc/umpi_mpi.h

tags::
	etags *.c *.h

ifneq ($(MAKECMDGOALS),clean)
  include $(C_SRCS:.c=.d) $(CXX_SRCS:.C=.D)
endif
